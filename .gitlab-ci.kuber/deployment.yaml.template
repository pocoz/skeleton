---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #[[\$]]#{APP}
  namespace: #[[\$]]#{KUBE_NAMESPACE}
  labels:
    k8s-app: #[[\$]]#{APP}
    version: v1
spec:
  replicas: 0
  selector:
    matchLabels:
      k8s-app: #[[\$]]#{APP}
      version: v1
  template:
    metadata:
      labels:
        k8s-app: #[[\$]]#{APP}
        version: v1
    spec:
      containers:
        - name: #[[\$]]#{APP}
          image: #[[\$]]#{DOCKER_REGISTRY}/#[[\$]]#{CI_PROJECT_NAME}:#[[\$]]#{CI_COMMIT_REF_SLUG}-#[[\$]]#{CI_PIPELINE_ID}
          resources:
            limits:
              memory: 4096Mi
              cpu: 100m
            requests:
              cpu: 100m
              memory: 2048Mi
          envFrom:
            - configMapRef:
                name: #[[\$]]#{APP}
            - secretRef:
                name: #[[\$]]#{APP}
        - name: #[[\$]]#{APP}-vector
          image: docker-registry.prod.lan/vector:k8s
          imagePullPolicy: Always
          resources:
            limits:
              memory: 200Mi
              cpu: 100m
            requests:
              cpu: 100m
              memory: 100Mi
          env:
            - name: VECTOR_CONFIG_YAML
              value: "/etc/vector/vector.yaml"
          envFrom:
            - configMapRef:
                name: #[[\$]]#{APP}-vector-env
            - secretRef:
                name: elasticsearch
          volumeMounts:
            - name: varlog
              mountPath: /var/log
      volumes:
        - name: varlog
          hostPath:
            path: /var/log/pods
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: #[[\$]]#{APP}
    version: v1
  name: #[[\$]]#{APP}
  namespace: #[[\$]]#{KUBE_NAMESPACE}
spec:
  ports:
    - name: "#[[\$]]#{HTTP_PORT}"
      port: #[[\$]]#{HTTP_PORT}
      targetPort: #[[\$]]#{HTTP_PORT}
  selector:
    k8s-app: #[[\$]]#{APP}
    version: v1
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: #[[\$]]#{APP}-ingress
  namespace: #[[\$]]#{KUBE_NAMESPACE}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: #[[\$]]#{APP}.k8s.test.goods.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: #[[\$]]#{APP}
                port:
                  number: #[[\$]]#{HTTP_PORT}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: #[[\$]]#{APP}
  namespace: #[[\$]]#{KUBE_NAMESPACE}
data:
  TASK_SEO_WORK_IS_ACTIVE: "#[[\$]]#{TASK_SEO_WORK_IS_ACTIVE}"
  TASK_SEO_WORK_CRON_PATTERN: "#[[\$]]#{TASK_SEO_WORK_CRON_PATTERN}"
  TASK_SEO_WORK_NAME: "#[[\$]]#{TASK_SEO_WORK_NAME}"
  MDWH_SEO_DATABASE: "#[[\$]]#{MDWH_SEO_DATABASE}"
  MDWH_SEO_PORT: "#[[\$]]#{MDWH_SEO_PORT}"
  MDWH_SEO_SERVER: "#[[\$]]#{MDWH_SEO_SERVER}"
  HTTP_PORT: "#[[\$]]#{HTTP_PORT}"
---
kind: Secret
apiVersion: v1
metadata:
  name: #[[\$]]#{APP}
  namespace: #[[\$]]#{KUBE_NAMESPACE}
stringData:
  SEO_WORK_TOKEN: "#[[\$]]#{SEO_WORK_TOKEN}"
  MDWH_SEO_PASSWORD: "#[[\$]]#{MDWH_SEO_PASSWORD}"
  MDWH_SEO_USER: "#[[\$]]#{MDWH_SEO_USER}"
